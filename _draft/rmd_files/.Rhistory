library(ggplot2)
ggplot(df,aes(x,y,xend=x2,yend=y2)) +
geom_segment(alpha=.1)+theme_void()
library(ggplot2)
n=300
t1=1:n
t0=seq(3,2*n+1,2)%%n
t2=t0+(t0==0)*n
df=data.frame(x=cos((t1-1)*2*pi/n),
y=sin((t1-1)*2*pi/n),
x2=cos((t2-1)*2*pi/n),
y2=sin((t2-1)*2*pi/n))
ggplot(df,aes(x,y,xend=x2,yend=y2)) +
geom_segment(alpha=.1)+theme_void()
library(ggplot2)
n=300
t1=1:n
t0=seq(3,2*n+1,2)%%n
t2=t0+(t0==0)*n
df=data.frame(x=cos((t1-1)*2*pi/n),
y=sin((t1-1)*2*pi/n),
x2=cos((t2-1)*2*pi/n),
y2=sin((t2-1)*2*pi/n))
ggplot(df,aes(x,y,xend=x2,yend=y2)) +
geom_segment(alpha=.1)+theme_void()
n=300
t1=1:n
t0=seq(3,2*n+1,2)%%n
t2=t0+(t0==0)*n
df=data.frame(x=cos((t1-1)*2*pi/n),
y=sin((t1-1)*2*pi/n),
x2=cos((t2-1)*2*pi/n),
y2=sin((t2-1)*2*pi/n))
ggplot(df,aes(x,y,xend=x2,yend=y2)) +
geom_segment(alpha=.1)+theme_void()
library(ggplot2)
n=300
t1=1:n
t0=seq(3,2*n+1,2)%%n
t2=t0+(t0==0)*n
df=data.frame(x=cos((t1-1)*2*pi/n),
y=sin((t1-1)*2*pi/n),
x2=cos((t2-1)*2*pi/n),
y2=sin((t2-1)*2*pi/n))
ggplot(df,aes(x,y,xend=x2,yend=y2)) +
geom_segment(alpha=.1)+theme_void()
library(ggplot2)
# For some reason this .rmd requires the variables to be initialized
x=0
y=0
x2=0
y2=0
n=300
t1=1:n
t0=seq(3,2*n+1,2)%%n
t2=t0+(t0==0)*n
df=data.frame(x=cos((t1-1)*2*pi/n),
y=sin((t1-1)*2*pi/n),
x2=cos((t2-1)*2*pi/n),
y2=sin((t2-1)*2*pi/n))
ggplot(df, aes(x, y, xend=x2, yend=y2)) +
geom_segment(alpha=.1) + theme_void()
library(ggplot2)
# For some reason this .rmd requires the variables to be initialized
x=0
y=0
x2=0
y2=0
n=300
t1=1:n
t0=seq(3,2*n+1,2)%%n
t2=t0+(t0==0)*n
df=data.frame(x=cos((t1-1)*2*pi/n),
y=sin((t1-1)*2*pi/n),
x2=cos((t2-1)*2*pi/n),
y2=sin((t2-1)*2*pi/n))
ggplot(df, aes(x, y, xend=x2, yend=y2)) +
geom_segment(alpha=.3) + theme_void()
library(ggplot2)
# For some reason this .rmd requires the variables to be initialized
x=0
y=0
x2=0
y2=0
n=300
t1=1:n
t0=seq(3,2*n+1,2)%%n
t2=t0+(t0==0)*n
df=data.frame(x=cos((t1-1)*2*pi/n),
y=sin((t1-1)*2*pi/n),
x2=cos((t2-1)*2*pi/n),
y2=sin((t2-1)*2*pi/n))
ggplot(df, aes(x, y, xend=x2, yend=y2)) +
geom_segment(alpha=.5) + theme_void()
library(ggplot2)
# For some reason this .rmd requires the variables to be initialized
x=0
y=0
x2=0
y2=0
n=300
t1=1:n
t0=seq(3,2*n+1,2)%%n
t2=t0+(t0==0)*n
df=data.frame(x=cos((t1-1)*2*pi/n),
y=sin((t1-1)*2*pi/n),
x2=cos((t2-1)*2*pi/n),
y2=sin((t2-1)*2*pi/n))
ggplot(df, aes(x, y, xend=x2, yend=y2)) +
geom_segment(alpha=.2) + theme_void()
sessioninfo::session_info()
set.seed(42)
xvar_rand_norm <- rnorm(1000, mean = 1)
df.xvar <- data.frame(xvar_rand_norm)
xvar_mean <- mean(xvar_rand_norm)
library(ggplot2)
ggplot(data = df.xvar, aes(x = xvar_rand_norm)) +
geom_histogram() +
geom_vline(xintercept = xvar_mean, color = "dark red") +
annotate("text", label = paste("Mean: ", round(xvar_mean,digits = 2)),
x = xvar_mean, y = 30, color = "white", size = 5)
obs = 10000 # rows
tests = matrix(0, nrow = obs, ncol = 8) # 8 cols = 8 runs
set.seed(1003)
# populate with random values, mean = 20, sd = 4
for (i in 1:obs) {
for (j in 1:8) {
tests[i,j] <- rnorm(1, mean = 20, sd = 4)
}
#Find sd of each row
sds = apply(tests, 1, sd)
# Filled Density Plot
d <- density(sds)
plot(d, main="Kernel Density of Std. Dev.")
polygon(d, col="red")
abline(v = 4.9, col= "black")
abline(v = 5.3, col= "black")
# Counts for standard deviation between 4.9 and 5.3
counts = vector(mode =  "integer", length = obs)
for (k in 1:obs) {
if ((sds[k] >= 4.9) & (sds[k] <= 5.3)) {
counts[k] <- 1
}
total = sum(counts)
print((sum(counts)/obs))
